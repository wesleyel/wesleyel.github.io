<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Buildroot on Country Road</title><link>https://wesleyel.github.io/tags/buildroot/</link><description>Recent content in Buildroot on Country Road</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>Wesley Yang</copyright><lastBuildDate>Wed, 04 Sep 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://wesleyel.github.io/tags/buildroot/index.xml" rel="self" type="application/rss+xml"/><item><title>Buildroot 速查</title><link>https://wesleyel.github.io/p/buildroot-cheatsheet/</link><pubDate>Wed, 04 Sep 2024 00:00:00 +0000</pubDate><guid>https://wesleyel.github.io/p/buildroot-cheatsheet/</guid><description>&lt;blockquote>
&lt;p>完整文档可以在&lt;a class="link" href="https://buildroot.org/downloads/manual/manual.html" target="_blank" rel="noopener"
>官方网站&lt;/a>找到。&lt;/p>
&lt;/blockquote>
&lt;h2 id="快速开始一个-buildroot-项目">快速开始一个 buildroot 项目
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">buildroot_repo&lt;/span>&lt;span class="o">=&lt;/span>https://github.com/buildroot/buildroot.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">buildroot_version&lt;/span>&lt;span class="o">=&lt;/span>2022.11
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">buildroot_src&lt;/span>&lt;span class="o">=&lt;/span>buildroot-&lt;span class="nv">$buildroot_version&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">buildroot_defcfg&lt;/span>&lt;span class="o">=&lt;/span>raspberrypi4_defconfig
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git clone --branch &lt;span class="nv">$buildroot_version&lt;/span> --depth &lt;span class="m">1&lt;/span> &lt;span class="nv">$buildroot_repo&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make -C &lt;span class="nv">$buildroot_src&lt;/span> defconfig &lt;span class="nv">BR2_DEFCONFIG&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$buildroot_defcfg&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make -C &lt;span class="nv">$buildroot_src&lt;/span> linux-reconfigure all
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="基本命令">基本命令
&lt;/h2>&lt;p>&lt;a class="link" href="https://buildroot.org/downloads/manual/manual.html#make-tips" target="_blank" rel="noopener"
>Make 提示&lt;/a>&lt;/p>
&lt;p>使用 &lt;code>make help&lt;/code> 获取所有可用目标的列表。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>命令&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>make&lt;/td>
&lt;td>构建 rootfs&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>make xyz_defconfig&lt;/td>
&lt;td>选择配置文件&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>make menuconfig&lt;/td>
&lt;td>打开配置菜单&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>make savedefconfig&lt;/td>
&lt;td>将当前配置保存到 defconfig 文件中&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>make source&lt;/td>
&lt;td>下载包的源代码&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>make clean&lt;/td>
&lt;td>清理所有构建产品（包括构建目录、主机、暂存和目标树、镜像和工具链）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>make distclean&lt;/td>
&lt;td>清理所有内容，包括配置&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="包管理">包管理
&lt;/h3>&lt;blockquote>
&lt;p>&lt;a class="link" href="https://buildroot.org/downloads/manual/manual.html#pkg-build-steps" target="_blank" rel="noopener"
>特定包的 make 目标&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>命令&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>make &amp;lt;pkg&amp;gt;&lt;/td>
&lt;td>构建一个包&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>make &amp;lt;pkg&amp;gt;-reinstall&lt;/td>
&lt;td>重新安装一个包&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>make &amp;lt;pkg&amp;gt;-rebuild&lt;/td>
&lt;td>重新构建一个包（这意味着重新安装）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>make &amp;lt;pkg&amp;gt;-reconfigure&lt;/td>
&lt;td>重新配置一个包（这意味着重新构建）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>make &amp;lt;pkg&amp;gt;-dirclean&lt;/td>
&lt;td>清理包目录&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="调试">调试
&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>命令&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>make graph-depends&lt;/td>
&lt;td>生成依赖关系图&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>make &amp;lt;pkg&amp;gt;-graph-depends&lt;/td>
&lt;td>生成包的依赖关系图&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="目录结构">目录结构
&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>目录&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>configs&lt;/td>
&lt;td>单板的配置和 defconfig 文件的位置&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>package&lt;/td>
&lt;td>包定义的位置&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>dl&lt;/td>
&lt;td>下载的源代码压缩包&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>output/build&lt;/td>
&lt;td>所有组件构建的目录&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>output/images&lt;/td>
&lt;td>构建的内核、引导加载程序和根文件系统镜像的位置&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>output/staging&lt;/td>
&lt;td>交叉编译工具链和用户空间包的头文件和库的位置（这是 host/&lt;toolchains>/sysroot 的软链）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>output/host&lt;/td>
&lt;td>包括交叉编译工具链在内的主机工具的位置&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>output/target&lt;/td>
&lt;td>几乎是最终的目标根文件系统&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="mk-文件">&lt;code>.mk&lt;/code> 文件
&lt;/h2>&lt;h3 id="cmake">Cmake
&lt;/h3>&lt;blockquote>
&lt;p>&lt;a class="link" href="https://buildroot.org/downloads/manual/manual.html#cmake-package-tutorial" target="_blank" rel="noopener"
>cmake 包教程&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>一个 cmake 包的示例：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-makefile" data-lang="makefile">&lt;span class="line">&lt;span class="cl">&lt;span class="c">################################################################################
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">#
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># libfoo
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">#
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">################################################################################
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">LIBFOO_VERSION&lt;/span> &lt;span class="o">=&lt;/span> 1.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">LIBFOO_SOURCE&lt;/span> &lt;span class="o">=&lt;/span> libfoo-&lt;span class="k">$(&lt;/span>LIBFOO_VERSION&lt;span class="k">)&lt;/span>.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">LIBFOO_SITE&lt;/span> &lt;span class="o">=&lt;/span> http://www.foosoftware.org/download
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">LIBFOO_INSTALL_STAGING&lt;/span> &lt;span class="o">=&lt;/span> YES
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">LIBFOO_INSTALL_TARGET&lt;/span> &lt;span class="o">=&lt;/span> NO
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">LIBFOO_CONF_OPTS&lt;/span> &lt;span class="o">=&lt;/span> -DBUILD_DEMOS&lt;span class="o">=&lt;/span>ON
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">LIBFOO_DEPENDENCIES&lt;/span> &lt;span class="o">=&lt;/span> libglib2 host-pkgconf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">$(&lt;/span>&lt;span class="nv">eval&lt;/span> &lt;span class="k">$(&lt;/span>&lt;span class="nv">cmake&lt;/span>-&lt;span class="nv">package&lt;/span>&lt;span class="k">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="外部包和-sysvinit">外部包和 sysvinit
&lt;/h3>&lt;p>一个带有 sysvinit 的外部包示例：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-makefile" data-lang="makefile">&lt;span class="line">&lt;span class="cl">&lt;span class="c">################################################################################
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">#
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># gsmmux 项目
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">#
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">################################################################################
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">GSMMUX_SITE&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">$(&lt;/span>TOPDIR&lt;span class="k">)&lt;/span>/../external/path/gsmmux
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">GSMMUX_SITE_METHOD&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">local&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">GSMMUX_INSTALL_STAGING&lt;/span> &lt;span class="o">=&lt;/span> YES
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">GSMMUX_VERSION&lt;/span> &lt;span class="o">=&lt;/span> 1.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">define&lt;/span> &lt;span class="err">GSMMUX_INSTALL_INIT_SYSV&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">$(&lt;/span>&lt;span class="nv">INSTALL&lt;/span>&lt;span class="k">)&lt;/span> &lt;span class="err">-D&lt;/span> &lt;span class="err">-m&lt;/span> &lt;span class="err">755&lt;/span> &lt;span class="k">$(&lt;/span>@&lt;span class="nv">D&lt;/span>&lt;span class="k">)&lt;/span>&lt;span class="err">/S50start_cmuxd&lt;/span> &lt;span class="err">\&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">$(&lt;/span>&lt;span class="nv">TARGET_DIR&lt;/span>&lt;span class="k">)&lt;/span>&lt;span class="err">/etc/init.d/S50start_cmuxd&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">endef&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">$(&lt;/span>&lt;span class="nv">eval&lt;/span> &lt;span class="k">$(&lt;/span>&lt;span class="nv">cmake&lt;/span>-&lt;span class="nv">package&lt;/span>&lt;span class="k">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="如何设置-ccache编译缓存">如何设置 ccache（编译缓存）？
&lt;/h3>&lt;p>&lt;a class="link" href="https://buildroot.org/downloads/manual/manual.html#ccache" target="_blank" rel="noopener"
>在 Buildroot 中使用 ccache&lt;/a>&lt;/p>
&lt;p>&lt;code>ccache&lt;/code> 支持已集成在 Buildroot 中。只需在 &lt;code>Build options&lt;/code> 中启用 &lt;code>Enable compiler cache&lt;/code>。这将自动构建 &lt;code>ccache&lt;/code> 并将其用于每个主机和目标编译。&lt;/p>
&lt;p>&lt;code>cache&lt;/code> 位于 &lt;code>BR2_CCACHE_DIR&lt;/code> 配置选项定义的目录中，默认值为 &lt;code>$HOME/.buildroot-ccache&lt;/code>。此默认位置在 Buildroot 输出目录之外，因此可以由单独的 Buildroot 构建共享。如果要删除缓存，只需删除此目录。&lt;/p>
&lt;h3 id="如何重新生成-targetrootfs">如何重新生成 target/rootfs
&lt;/h3>&lt;p>&lt;a class="link" href="https://stackoverflow.com/questions/47320800/how-to-clean-only-target-in-buildroot" target="_blank" rel="noopener"
>How to clean only target in buildroot&lt;/a>&lt;/p>
&lt;p>由于&lt;code>rm -rf output/target &amp;amp;&amp;amp; make&lt;/code>并不会触发 install 操作，所以需要用以下 hack 来实现：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">rm -rf output/target
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 删除所有的 .stamp_target_installed 文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">find ../ -name &lt;span class="s2">&amp;#34;.stamp_target_installed&amp;#34;&lt;/span> -delete
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rm -f output/build/host-gcc-final-*/.stamp_host_installed
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item></channel></rss>